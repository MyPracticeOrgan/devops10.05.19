server {
	listen 80;
	listen [::]:80;
    server_name
               {{ item.dns }}
               www.{{ item.dns }}
             ;

	return 301 https://{{ item.dns }}$request_uri;
}

server {
    listen       443 ssl;
    listen       [::]:443 ssl;
    server_name
               {{ item.dns }}
               www.{{ item.dns }}
             ;

if ( $host ~* "^www\.(.*)$" ) {
    return 301  https://{{ item.dns }}$request_uri;
}

    access_log  /var/log/nginx/{{ item.dns }}.access.log;
    error_log  /var/log/nginx/{{ item.dns }}.log;

    ssl_certificate /etc/letsencrypt/live/cccseu.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cccseu.com/privkey.pem; # managed by Certbot
    proxy_intercept_errors on;

#    error_page 404 /error_404.html;
#    location = /error_404.html {
#          root /etc/nginx/error-html-pages;
#          internal;
#    }

#    error_page 502 503 504 /error_other.html;
#    location = /error_other.html {
#           root /etc/nginx/error-html-pages;
#           internal;
#    }

    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

include /etc/nginx/conf.d/sites-enabled/{{ item.stream }}.d/*.conf;
}

upstream {{ item.stream }} {
  
  	server {{ ansible_eth0.ipv4.address }}:{{ item.port }};
	}

